<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.limp.framework.boss.mapper.oracle.RoleMapper">
    <resultMap id="BaseResultMap" type="com.limp.framework.boss.domain.Role">
        <id column="URE_GUID" property="id" jdbcType="VARCHAR"/>
        <result column="URE_NAME" property="ureName" jdbcType="VARCHAR"/>
        <result column="URE_REMARKS" property="ureRemarks" jdbcType="VARCHAR"/>
        <result column="URE_STATE" property="ureState" jdbcType="DECIMAL"/>
        <result column="URE_RC0" property="ureRc0" jdbcType="VARCHAR"/>
        <result column="URE_RC1" property="ureRc1" jdbcType="VARCHAR"/>
        <result column="URE_RC2" property="ureRc2" jdbcType="VARCHAR"/>
        <result column="URE_RC3" property="ureRc3" jdbcType="DECIMAL"/>
        <result column="URE_RC4" property="ureRc4" jdbcType="DECIMAL"/>
        <result column="URE_RC5" property="ureRc5" jdbcType="DATE"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    URE_GUID, URE_NAME, URE_REMARKS, URE_STATE, URE_RC0, URE_RC1, URE_RC2, URE_RC3, URE_RC4, 
    URE_RC5
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.limp.framework.boss.domain.RoleExample">
        <include refid="OracleDialectPrefix"/>
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from SYS_USERROLE
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <include refid="OracleDialectSuffix"/>
    </select>
    <select id="getRoleListByKid"  resultMap="BaseResultMap" >
        select * from SYS_USERROLE t3 where t3.ure_guid in(SELECT DISTINCT r.ure_guid from SYS_KEY_DATAVALUE_MAP t LEFT join
        SYS_USERROLE r
        ON t.skm_value=r.ure_guid WHERE r.ure_state=1  and t.skm_key in
        <foreach item="item" index="index" collection="roleIds" open="(" separator="," close=")">
            #{item}
        </foreach>)
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="String">
        select
        <include refid="Base_Column_List"/>
        from SYS_USERROLE
        where URE_GUID = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="String" flushCache="true">
    delete from SYS_USERROLE
    where URE_GUID = #{id,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.limp.framework.boss.domain.RoleExample" flushCache="true">
        delete from SYS_USERROLE
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.limp.framework.boss.domain.Role" flushCache="true">
    insert into SYS_USERROLE (URE_GUID, URE_NAME, URE_REMARKS, 
      URE_STATE, URE_RC0, URE_RC1, 
      URE_RC2, URE_RC3, URE_RC4, 
      URE_RC5)
    values (#{id,jdbcType=VARCHAR}, #{ureName,jdbcType=VARCHAR}, #{ureRemarks,jdbcType=VARCHAR}, 
      #{ureState,jdbcType=DECIMAL}, #{ureRc0,jdbcType=VARCHAR}, #{ureRc1,jdbcType=VARCHAR}, 
      #{ureRc2,jdbcType=VARCHAR}, #{ureRc3,jdbcType=DECIMAL}, #{ureRc4,jdbcType=DECIMAL}, 
      #{ureRc5,jdbcType=DATE})
  </insert>
    <insert id="insertSelective" parameterType="com.limp.framework.boss.domain.Role" flushCache="true">
        insert into SYS_USERROLE
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                URE_GUID,
            </if>
            <if test="ureName != null">
                URE_NAME,
            </if>
            <if test="ureRemarks != null">
                URE_REMARKS,
            </if>
            <if test="ureState != null">
                URE_STATE,
            </if>
            <if test="ureRc0 != null">
                URE_RC0,
            </if>
            <if test="ureRc1 != null">
                URE_RC1,
            </if>
            <if test="ureRc2 != null">
                URE_RC2,
            </if>
            <if test="ureRc3 != null">
                URE_RC3,
            </if>
            <if test="ureRc4 != null">
                URE_RC4,
            </if>
            <if test="ureRc5 != null">
                URE_RC5,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="ureName != null">
                #{ureName,jdbcType=VARCHAR},
            </if>
            <if test="ureRemarks != null">
                #{ureRemarks,jdbcType=VARCHAR},
            </if>
            <if test="ureState != null">
                #{ureState,jdbcType=DECIMAL},
            </if>
            <if test="ureRc0 != null">
                #{ureRc0,jdbcType=VARCHAR},
            </if>
            <if test="ureRc1 != null">
                #{ureRc1,jdbcType=VARCHAR},
            </if>
            <if test="ureRc2 != null">
                #{ureRc2,jdbcType=VARCHAR},
            </if>
            <if test="ureRc3 != null">
                #{ureRc3,jdbcType=DECIMAL},
            </if>
            <if test="ureRc4 != null">
                #{ureRc4,jdbcType=DECIMAL},
            </if>
            <if test="ureRc5 != null">
                #{ureRc5,jdbcType=DATE},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.limp.framework.boss.domain.RoleExample"
            resultType="java.lang.Integer">
        select count(*) from SYS_USERROLE
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" flushCache="true">
        update SYS_USERROLE
        <set>
            <if test="record.id != null">
                URE_GUID = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.ureName != null">
                URE_NAME = #{record.ureName,jdbcType=VARCHAR},
            </if>
            <if test="record.ureRemarks != null">
                URE_REMARKS = #{record.ureRemarks,jdbcType=VARCHAR},
            </if>
            <if test="record.ureState != null">
                URE_STATE = #{record.ureState,jdbcType=DECIMAL},
            </if>
            <if test="record.ureRc0 != null">
                URE_RC0 = #{record.ureRc0,jdbcType=VARCHAR},
            </if>
            <if test="record.ureRc1 != null">
                URE_RC1 = #{record.ureRc1,jdbcType=VARCHAR},
            </if>
            <if test="record.ureRc2 != null">
                URE_RC2 = #{record.ureRc2,jdbcType=VARCHAR},
            </if>
            <if test="record.ureRc3 != null">
                URE_RC3 = #{record.ureRc3,jdbcType=DECIMAL},
            </if>
            <if test="record.ureRc4 != null">
                URE_RC4 = #{record.ureRc4,jdbcType=DECIMAL},
            </if>
            <if test="record.ureRc5 != null">
                URE_RC5 = #{record.ureRc5,jdbcType=DATE},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map" flushCache="true">
        update SYS_USERROLE
        set URE_GUID = #{record.id,jdbcType=VARCHAR},
        URE_NAME = #{record.ureName,jdbcType=VARCHAR},
        URE_REMARKS = #{record.ureRemarks,jdbcType=VARCHAR},
        URE_STATE = #{record.ureState,jdbcType=DECIMAL},
        URE_RC0 = #{record.ureRc0,jdbcType=VARCHAR},
        URE_RC1 = #{record.ureRc1,jdbcType=VARCHAR},
        URE_RC2 = #{record.ureRc2,jdbcType=VARCHAR},
        URE_RC3 = #{record.ureRc3,jdbcType=DECIMAL},
        URE_RC4 = #{record.ureRc4,jdbcType=DECIMAL},
        URE_RC5 = #{record.ureRc5,jdbcType=DATE}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.limp.framework.boss.domain.Role" flushCache="true">
        update SYS_USERROLE
        <set>
            <if test="ureName != null">
                URE_NAME = #{ureName,jdbcType=VARCHAR},
            </if>
            <if test="ureRemarks != null">
                URE_REMARKS = #{ureRemarks,jdbcType=VARCHAR},
            </if>
            <if test="ureState != null">
                URE_STATE = #{ureState,jdbcType=DECIMAL},
            </if>
            <if test="ureRc0 != null">
                URE_RC0 = #{ureRc0,jdbcType=VARCHAR},
            </if>
            <if test="ureRc1 != null">
                URE_RC1 = #{ureRc1,jdbcType=VARCHAR},
            </if>
            <if test="ureRc2 != null">
                URE_RC2 = #{ureRc2,jdbcType=VARCHAR},
            </if>
            <if test="ureRc3 != null">
                URE_RC3 = #{ureRc3,jdbcType=DECIMAL},
            </if>
            <if test="ureRc4 != null">
                URE_RC4 = #{ureRc4,jdbcType=DECIMAL},
            </if>
            <if test="ureRc5 != null">
                URE_RC5 = #{ureRc5,jdbcType=DATE},
            </if>
        </set>
        where URE_GUID = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.limp.framework.boss.domain.Role" flushCache="true">
    update SYS_USERROLE
    set URE_NAME = #{ureName,jdbcType=VARCHAR},
      URE_REMARKS = #{ureRemarks,jdbcType=VARCHAR},
      URE_STATE = #{ureState,jdbcType=DECIMAL},
      URE_RC0 = #{ureRc0,jdbcType=VARCHAR},
      URE_RC1 = #{ureRc1,jdbcType=VARCHAR},
      URE_RC2 = #{ureRc2,jdbcType=VARCHAR},
      URE_RC3 = #{ureRc3,jdbcType=DECIMAL},
      URE_RC4 = #{ureRc4,jdbcType=DECIMAL},
      URE_RC5 = #{ureRc5,jdbcType=DATE}
    where URE_GUID = #{id,jdbcType=VARCHAR}
  </update>
    <sql id="OracleDialectPrefix">
        <if test="page != null">
            select * from ( select row_.*, rownum rownum_ from (
        </if>
    </sql>
    <sql id="OracleDialectSuffix">
        <if test="page != null">
            <![CDATA[ ) row_ ) where rownum_ > #{page.start} and rownum_ <= #{page.end} ]]>
        </if>
    </sql>

    <select id="selectMenusByRoleId" resultType="String" parameterType="String">
        SELECT
        UMM_MENGUID
        FROM SYS_USRROLE_MENU_MAP
        WHERE UMM_UREGUID = #{rid,jdbcType=VARCHAR}
    </select>
    <select id="selectRoles" resultMap="BaseResultMap" parameterType="String">
       select u.* from SYS_USER_ROLE_MAP  m LEFT JOIN SYS_USERROLE u  on m.urm_ureguid = u.URE_GUID
        WHERE m.urm_usrguid=#{userId,jdbcType=VARCHAR}  and u.ure_guid is not null
    </select>

</mapper>