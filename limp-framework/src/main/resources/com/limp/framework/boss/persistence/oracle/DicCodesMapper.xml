<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2017. 北京中软国际信息技术有限公司 .
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.limp.framework.boss.mapper.oracle.DicCodesMapper" >
  <resultMap id="BaseResultMap" type="com.limp.framework.boss.domain.DicCodes" >
    <result column="DICT_CATE" property="dictCate" jdbcType="VARCHAR" />
    <result column="DICTDATA_NAME" property="dictdataName" jdbcType="VARCHAR" />
    <result column="DICTDATA_VALUE" property="dictdataValue" jdbcType="VARCHAR" />
    <result column="DICT_INTRO" property="dictIntro" jdbcType="VARCHAR" />
    <result column="DICT_STATUE" property="dictStatue" jdbcType="VARCHAR" />
    <result column="DICT_PVALUE" property="dictPvalue" jdbcType="VARCHAR" />
    <result column="DICT_SORT" property="dictSort" jdbcType="DECIMAL" />
    <result column="DICT_KEY" property="dictKey" jdbcType="VARCHAR" />
    <result column="DICT_LV" property="dictLv" jdbcType="DECIMAL" />
    <result column="DICT_RC1" property="dictRc1" jdbcType="VARCHAR" />
    <result column="DICT_RC2" property="dictRc2" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    DICT_CATE, DICTDATA_NAME, DICTDATA_VALUE, DICT_INTRO, DICT_STATUE, DICT_PVALUE, DICT_SORT, 
    DICT_KEY, DICT_LV, DICT_RC1, DICT_RC2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.limp.framework.boss.domain.DicCodesExample" >
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SYS_DIC_CODE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByExampleByMsql" resultMap="BaseResultMap" parameterType="com.limp.framework.boss.domain.DicCodesExample" >
    <include refid="MysqlDialectPrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SYS_DIC_CODE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="MysqlDialectSuffix" />
  </select>
  <delete id="deleteByExample" parameterType="com.limp.framework.boss.domain.DicCodesExample" >
    delete from SYS_DIC_CODE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.limp.framework.boss.domain.DicCodes" >
    insert into SYS_DIC_CODE (DICT_CATE, DICTDATA_NAME, DICTDATA_VALUE, 
      DICT_INTRO, DICT_STATUE, DICT_PVALUE, 
      DICT_SORT, DICT_KEY, DICT_LV, 
      DICT_RC1, DICT_RC2)
    values (#{dictCate,jdbcType=VARCHAR}, #{dictdataName,jdbcType=VARCHAR}, #{dictdataValue,jdbcType=VARCHAR}, 
      #{dictIntro,jdbcType=VARCHAR}, #{dictStatue,jdbcType=VARCHAR}, #{dictPvalue,jdbcType=VARCHAR}, 
      #{dictSort,jdbcType=DECIMAL}, #{dictKey,jdbcType=VARCHAR}, #{dictLv,jdbcType=DECIMAL}, 
      #{dictRc1,jdbcType=VARCHAR}, #{dictRc2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.limp.framework.boss.domain.DicCodes" >
    insert into SYS_DIC_CODE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="dictCate != null" >
        DICT_CATE,
      </if>
      <if test="dictdataName != null" >
        DICTDATA_NAME,
      </if>
      <if test="dictdataValue != null" >
        DICTDATA_VALUE,
      </if>
      <if test="dictIntro != null" >
        DICT_INTRO,
      </if>
      <if test="dictStatue != null" >
        DICT_STATUE,
      </if>
      <if test="dictPvalue != null" >
        DICT_PVALUE,
      </if>
      <if test="dictSort != null" >
        DICT_SORT,
      </if>
      <if test="dictKey != null" >
        DICT_KEY,
      </if>
      <if test="dictLv != null" >
        DICT_LV,
      </if>
      <if test="dictRc1 != null" >
        DICT_RC1,
      </if>
      <if test="dictRc2 != null" >
        DICT_RC2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="dictCate != null" >
        #{dictCate,jdbcType=VARCHAR},
      </if>
      <if test="dictdataName != null" >
        #{dictdataName,jdbcType=VARCHAR},
      </if>
      <if test="dictdataValue != null" >
        #{dictdataValue,jdbcType=VARCHAR},
      </if>
      <if test="dictIntro != null" >
        #{dictIntro,jdbcType=VARCHAR},
      </if>
      <if test="dictStatue != null" >
        #{dictStatue,jdbcType=VARCHAR},
      </if>
      <if test="dictPvalue != null" >
        #{dictPvalue,jdbcType=VARCHAR},
      </if>
      <if test="dictSort != null" >
        #{dictSort,jdbcType=DECIMAL},
      </if>
      <if test="dictKey != null" >
        #{dictKey,jdbcType=VARCHAR},
      </if>
      <if test="dictLv != null" >
        #{dictLv,jdbcType=DECIMAL},
      </if>
      <if test="dictRc1 != null" >
        #{dictRc1,jdbcType=VARCHAR},
      </if>
      <if test="dictRc2 != null" >
        #{dictRc2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.limp.framework.boss.domain.DicCodesExample" resultType="java.lang.Integer" >
    select count(*) from SYS_DIC_CODE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update SYS_DIC_CODE
    <set >
      <if test="record.dictCate != null" >
        DICT_CATE = #{record.dictCate,jdbcType=VARCHAR},
      </if>
      <if test="record.dictdataName != null" >
        DICTDATA_NAME = #{record.dictdataName,jdbcType=VARCHAR},
      </if>
      <if test="record.dictdataValue != null" >
        DICTDATA_VALUE = #{record.dictdataValue,jdbcType=VARCHAR},
      </if>
      <if test="record.dictIntro != null" >
        DICT_INTRO = #{record.dictIntro,jdbcType=VARCHAR},
      </if>
      <if test="record.dictStatue != null" >
        DICT_STATUE = #{record.dictStatue,jdbcType=VARCHAR},
      </if>
      <if test="record.dictPvalue != null" >
        DICT_PVALUE = #{record.dictPvalue,jdbcType=VARCHAR},
      </if>
      <if test="record.dictSort != null" >
        DICT_SORT = #{record.dictSort,jdbcType=DECIMAL},
      </if>
      <if test="record.dictKey != null" >
        DICT_KEY = #{record.dictKey,jdbcType=VARCHAR},
      </if>
      <if test="record.dictLv != null" >
        DICT_LV = #{record.dictLv,jdbcType=DECIMAL},
      </if>
      <if test="record.dictRc1 != null" >
        DICT_RC1 = #{record.dictRc1,jdbcType=VARCHAR},
      </if>
      <if test="record.dictRc2 != null" >
        DICT_RC2 = #{record.dictRc2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update SYS_DIC_CODE
    set DICT_CATE = #{record.dictCate,jdbcType=VARCHAR},
      DICTDATA_NAME = #{record.dictdataName,jdbcType=VARCHAR},
      DICTDATA_VALUE = #{record.dictdataValue,jdbcType=VARCHAR},
      DICT_INTRO = #{record.dictIntro,jdbcType=VARCHAR},
      DICT_STATUE = #{record.dictStatue,jdbcType=VARCHAR},
      DICT_PVALUE = #{record.dictPvalue,jdbcType=VARCHAR},
      DICT_SORT = #{record.dictSort,jdbcType=DECIMAL},
      DICT_KEY = #{record.dictKey,jdbcType=VARCHAR},
      DICT_LV = #{record.dictLv,jdbcType=DECIMAL},
      DICT_RC1 = #{record.dictRc1,jdbcType=VARCHAR},
      DICT_RC2 = #{record.dictRc2,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <sql id="OracleDialectPrefix" >
    <if test="page != null" >
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      <![CDATA[ ) row_ ) where rownum_ > #{page.start} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
  <sql id="MysqlDialectPrefix">
    <if test="page != null">
      select row_.* from (
    </if>
  </sql>
  <sql id="MysqlDialectSuffix">
    <if test="page != null">
      <![CDATA[ ) row_  LIMIT  #{page.start} , #{page.rows} ]]>
    </if>
  </sql>
</mapper>