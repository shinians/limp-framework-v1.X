<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.limp.framework.boss.mapper.oracle.MSGMapper" >
  <resultMap id="BaseResultMap" type="com.limp.framework.boss.domain.MSG" >
    <result column="MSG_ID" property="id" jdbcType="VARCHAR" />
    <result column="MSG_TITLE" property="title" jdbcType="VARCHAR" />
    <result column="MSG_INTRO" property="intro" jdbcType="VARCHAR" />
    <result column="MSG_PATH" property="path" jdbcType="VARCHAR" />
    <result column="MSG_IDT" property="idt" jdbcType="OTHER" />
    <result column="MSG_USRIDFROM" property="usridfrom" jdbcType="VARCHAR" />
    <result column="MSG_USRIDTO" property="usridto" jdbcType="VARCHAR" />
    <result column="MSG_TYPE" property="type" jdbcType="DECIMAL" />
    <result column="MSG_READ" property="read" jdbcType="DECIMAL" />
    <result column="MSG_UDT" property="udt" jdbcType="OTHER" />
    <result column="MSG_STATUS" property="status" jdbcType="DECIMAL" />
    <result column="MSG_ACTION" property="action" jdbcType="VARCHAR" />
    <result column="MSG_RC1" property="rc1" jdbcType="VARCHAR" />
    <result column="MSG_RC2" property="rc2" jdbcType="VARCHAR" />
    <result column="MSG_RC3" property="rc3" jdbcType="DECIMAL" />
    <result column="MSG_RC4" property="rc4" jdbcType="DECIMAL" />
    <result column="MSG_RC5" property="rc5" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    MSG_ID, MSG_TITLE, MSG_INTRO, MSG_PATH, MSG_IDT, MSG_USRIDFROM, MSG_USRIDTO, MSG_TYPE, 
    MSG_READ, MSG_UDT, MSG_STATUS, MSG_ACTION, MSG_RC1, MSG_RC2, MSG_RC3, MSG_RC4, MSG_RC5
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.limp.framework.boss.domain.MSGExample" >
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SYS_MSG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByExampleByMsql" resultMap="BaseResultMap" parameterType="com.limp.framework.boss.domain.MSGExample" >
    <include refid="MysqlDialectPrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,usr_account AS  usrAccountTo
    from SYS_MSG left join SYS_USERS on msg_usridto=USR_GUID
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="MysqlDialectSuffix" />
  </select>
  <delete id="deleteByExample" parameterType="com.limp.framework.boss.domain.MSGExample" >
    delete from SYS_MSG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.limp.framework.boss.domain.MSG" >
    insert into SYS_MSG (MSG_ID, MSG_TITLE, MSG_INTRO, 
      MSG_PATH, MSG_IDT, MSG_USRIDFROM, 
      MSG_USRIDTO, MSG_TYPE, MSG_READ, 
      MSG_UDT, MSG_STATUS, MSG_ACTION, 
      MSG_RC1, MSG_RC2, MSG_RC3, MSG_RC4, 
      MSG_RC5)
    values (#{id,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{intro,jdbcType=VARCHAR}, 
      #{path,jdbcType=VARCHAR}, #{idt,jdbcType=OTHER}, #{usridfrom,jdbcType=VARCHAR}, 
      #{usridto,jdbcType=VARCHAR}, #{type,jdbcType=DECIMAL}, #{read,jdbcType=DECIMAL}, 
      #{udt,jdbcType=OTHER}, #{status,jdbcType=DECIMAL}, #{action,jdbcType=VARCHAR}, 
      #{rc1,jdbcType=VARCHAR}, #{rc2,jdbcType=VARCHAR}, #{rc3,jdbcType=DECIMAL}, #{rc4,jdbcType=DECIMAL}, 
      #{rc5,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.limp.framework.boss.domain.MSG" >
    insert into SYS_MSG
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        MSG_ID,
      </if>
      <if test="title != null" >
        MSG_TITLE,
      </if>
      <if test="intro != null" >
        MSG_INTRO,
      </if>
      <if test="path != null" >
        MSG_PATH,
      </if>
      <if test="idt != null" >
        MSG_IDT,
      </if>
      <if test="usridfrom != null" >
        MSG_USRIDFROM,
      </if>
      <if test="usridto != null" >
        MSG_USRIDTO,
      </if>
      <if test="type != null" >
        MSG_TYPE,
      </if>
      <if test="read != null" >
        MSG_READ,
      </if>
      <if test="udt != null" >
        MSG_UDT,
      </if>
      <if test="status != null" >
        MSG_STATUS,
      </if>
      <if test="action != null" >
        MSG_ACTION,
      </if>
      <if test="rc1 != null" >
        MSG_RC1,
      </if>
      <if test="rc2 != null" >
        MSG_RC2,
      </if>
      <if test="rc3 != null" >
        MSG_RC3,
      </if>
      <if test="rc4 != null" >
        MSG_RC4,
      </if>
      <if test="rc5 != null" >
        MSG_RC5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="intro != null" >
        #{intro,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="idt != null" >
        #{idt,jdbcType=OTHER},
      </if>
      <if test="usridfrom != null" >
        #{usridfrom,jdbcType=VARCHAR},
      </if>
      <if test="usridto != null" >
        #{usridto,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=DECIMAL},
      </if>
      <if test="read != null" >
        #{read,jdbcType=DECIMAL},
      </if>
      <if test="udt != null" >
        #{udt,jdbcType=OTHER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=DECIMAL},
      </if>
      <if test="action != null" >
        #{action,jdbcType=VARCHAR},
      </if>
      <if test="rc1 != null" >
        #{rc1,jdbcType=VARCHAR},
      </if>
      <if test="rc2 != null" >
        #{rc2,jdbcType=VARCHAR},
      </if>
      <if test="rc3 != null" >
        #{rc3,jdbcType=DECIMAL},
      </if>
      <if test="rc4 != null" >
        #{rc4,jdbcType=DECIMAL},
      </if>
      <if test="rc5 != null" >
        #{rc5,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.limp.framework.boss.domain.MSGExample" resultType="java.lang.Integer" >
    select count(*) from SYS_MSG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update SYS_MSG
    <set >
      <if test="record.id != null" >
        MSG_ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        MSG_TITLE = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.intro != null" >
        MSG_INTRO = #{record.intro,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null" >
        MSG_PATH = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.idt != null" >
        MSG_IDT = #{record.idt,jdbcType=OTHER},
      </if>
      <if test="record.usridfrom != null" >
        MSG_USRIDFROM = #{record.usridfrom,jdbcType=VARCHAR},
      </if>
      <if test="record.usridto != null" >
        MSG_USRIDTO = #{record.usridto,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        MSG_TYPE = #{record.type,jdbcType=DECIMAL},
      </if>
      <if test="record.read != null" >
        MSG_READ = #{record.read,jdbcType=DECIMAL},
      </if>
      <if test="record.udt != null" >
        MSG_UDT = #{record.udt,jdbcType=OTHER},
      </if>
      <if test="record.status != null" >
        MSG_STATUS = #{record.status,jdbcType=DECIMAL},
      </if>
      <if test="record.action != null" >
        MSG_ACTION = #{record.action,jdbcType=VARCHAR},
      </if>
      <if test="record.rc1 != null" >
        MSG_RC1 = #{record.rc1,jdbcType=VARCHAR},
      </if>
      <if test="record.rc2 != null" >
        MSG_RC2 = #{record.rc2,jdbcType=VARCHAR},
      </if>
      <if test="record.rc3 != null" >
        MSG_RC3 = #{record.rc3,jdbcType=DECIMAL},
      </if>
      <if test="record.rc4 != null" >
        MSG_RC4 = #{record.rc4,jdbcType=DECIMAL},
      </if>
      <if test="record.rc5 != null" >
        MSG_RC5 = #{record.rc5,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update SYS_MSG
    set MSG_ID = #{record.id,jdbcType=VARCHAR},
      MSG_TITLE = #{record.title,jdbcType=VARCHAR},
      MSG_INTRO = #{record.intro,jdbcType=VARCHAR},
      MSG_PATH = #{record.path,jdbcType=VARCHAR},
      MSG_IDT = #{record.idt,jdbcType=OTHER},
      MSG_USRIDFROM = #{record.usridfrom,jdbcType=VARCHAR},
      MSG_USRIDTO = #{record.usridto,jdbcType=VARCHAR},
      MSG_TYPE = #{record.type,jdbcType=DECIMAL},
      MSG_READ = #{record.read,jdbcType=DECIMAL},
      MSG_UDT = #{record.udt,jdbcType=OTHER},
      MSG_STATUS = #{record.status,jdbcType=DECIMAL},
      MSG_ACTION = #{record.action,jdbcType=VARCHAR},
      MSG_RC1 = #{record.rc1,jdbcType=VARCHAR},
      MSG_RC2 = #{record.rc2,jdbcType=VARCHAR},
      MSG_RC3 = #{record.rc3,jdbcType=DECIMAL},
      MSG_RC4 = #{record.rc4,jdbcType=DECIMAL},
      MSG_RC5 = #{record.rc5,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <sql id="OracleDialectPrefix" >
    <if test="page != null" >
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      <![CDATA[ ) row_ ) where rownum_ > #{page.start} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
    <sql id="MysqlDialectPrefix">
        <if test="page != null">
            select row_.* from (
        </if>
    </sql>
    <sql id="MysqlDialectSuffix">
        <if test="page != null">
            <![CDATA[ ) row_  LIMIT  #{page.start} , #{page.rows} ]]>
        </if>
    </sql>
</mapper>