<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.limp.framework.boss.mapper.oracle.KeyValueMapMapper" >
  <resultMap id="BaseResultMap" type="com.limp.framework.boss.domain.KeyValueMap" >
    <result column="SKM_KEY" property="key" jdbcType="VARCHAR" />
    <result column="SKM_VALUE" property="value" jdbcType="VARCHAR" />
    <result column="SKM_RC1" property="rc1" jdbcType="VARCHAR" />
    <result column="SKM_RC2" property="rc2" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    SKM_KEY, SKM_VALUE, SKM_RC1, SKM_RC2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.limp.framework.boss.domain.KeyValueMapExample" >
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SYS_KEY_DATAVALUE_MAP
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <delete id="deleteByExample" parameterType="com.limp.framework.boss.domain.KeyValueMapExample" >
    delete from SYS_KEY_DATAVALUE_MAP
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.limp.framework.boss.domain.KeyValueMap" >
    insert into SYS_KEY_DATAVALUE_MAP (SKM_KEY, SKM_VALUE, SKM_RC1, 
      SKM_RC2)
    values (#{key,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}, #{rc1,jdbcType=VARCHAR}, 
      #{rc2,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.limp.framework.boss.domain.KeyValueMap" >
    insert into SYS_KEY_DATAVALUE_MAP
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="key != null" >
        SKM_KEY,
      </if>
      <if test="value != null" >
        SKM_VALUE,
      </if>
      <if test="rc1 != null" >
        SKM_RC1,
      </if>
      <if test="rc2 != null" >
        SKM_RC2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="key != null" >
        #{key,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="rc1 != null" >
        #{rc1,jdbcType=VARCHAR},
      </if>
      <if test="rc2 != null" >
        #{rc2,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.limp.framework.boss.domain.KeyValueMapExample" resultType="java.lang.Integer" >
    select count(*) from SYS_KEY_DATAVALUE_MAP
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update SYS_KEY_DATAVALUE_MAP
    <set >
      <if test="record.key != null" >
        SKM_KEY = #{record.key,jdbcType=VARCHAR},
      </if>
      <if test="record.value != null" >
        SKM_VALUE = #{record.value,jdbcType=VARCHAR},
      </if>
      <if test="record.rc1 != null" >
        SKM_RC1 = #{record.rc1,jdbcType=VARCHAR},
      </if>
      <if test="record.rc2 != null" >
        SKM_RC2 = #{record.rc2,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update SYS_KEY_DATAVALUE_MAP
    set SKM_KEY = #{record.key,jdbcType=VARCHAR},
      SKM_VALUE = #{record.value,jdbcType=VARCHAR},
      SKM_RC1 = #{record.rc1,jdbcType=VARCHAR},
      SKM_RC2 = #{record.rc2,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <sql id="OracleDialectPrefix" >
    <if test="page != null" >
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      <![CDATA[ ) row_ ) where rownum_ > #{page.start} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
</mapper>