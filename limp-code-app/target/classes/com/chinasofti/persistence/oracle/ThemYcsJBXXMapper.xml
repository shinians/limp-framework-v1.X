<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chinasofti.mapper.oracle.ThemYcsJBXXMapper" >
  <resultMap id="BaseResultMap" type="com.chinasofti.domain.ThemYcsJBXX" >
    <result column="ID" property="id" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="ORGNAME" property="orgname" jdbcType="VARCHAR" />
    <result column="PROVCODE" property="provcode" jdbcType="VARCHAR" />
    <result column="LV" property="lv" jdbcType="VARCHAR" />
    <result column="EDUCERTCODE" property="educertcode" jdbcType="VARCHAR" />
    <result column="POSITION" property="position" jdbcType="VARCHAR" />
    <result column="CERTTIME" property="certtime" jdbcType="VARCHAR" />
    <result column="MAJORCODE" property="majorcode" jdbcType="VARCHAR" />
    <result column="SEX" property="sex" jdbcType="VARCHAR" />
    <result column="PXNUM" property="pxnum" jdbcType="DECIMAL" />
    <result column="SHIPNUM" property="shipnum" jdbcType="DECIMAL" />
    <result column="DRAWNUM" property="drawnum" jdbcType="DECIMAL" />
    <result column="PRODUCTNUM" property="productnum" jdbcType="DECIMAL" />
    <result column="YEAR" property="year" jdbcType="VARCHAR" />
    <result column="RANGETYPE" property="rangetype" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, NAME, ORGNAME, PROVCODE, LV, EDUCERTCODE, POSITION, CERTTIME, MAJORCODE, SEX, 
    PXNUM, SHIPNUM, DRAWNUM, PRODUCTNUM, YEAR, RANGETYPE
  </sql>
<!--验船师持证总人数$动态参数:写法可参照getYcsXLGroupIndex ，[待优化]防止重复统计-->
    <select id="getYcsNumGroupByYear" resultType="java.util.HashMap" parameterType="com.chinasofti.domain.ThemYcsJBXX">
        select year,count(1) num from them_ycs_jbxx
        <where>
          <if test="orgcode != null">
            AND orgcode like #{orgcode}
          </if>
          <if test="rangetype != null">
            AND rangetype = #{rangetype}
          </if>
          <if test="orgname != null">
            AND orgname=#{orgname,jdbcType=VARCHAR}
          </if>
          <if test="lv != null">
            AND LV = #{lv,jdbcType=VARCHAR}
          </if>
          <if test="year != null">
            AND year in(${year})
          </if>
          <if test="provcode != null">
            AND T.provcode in(${provcode})
          </if>
        </where>
        group by year ORDER BY year asc
    </select>
    <!--各级持证验船师学历结构情况-->
    <select id="getYcsXLGroupIndex" resultType="java.util.HashMap" parameterType="com.chinasofti.domain.ThemYcsJBXX">
        SELECT TT.EDUCERTCODE as "${@com.limp.framework.core.constant.Constant@CODE_TRANS_PRE}EDUCERTCODE" ,
        TT.LV as "${@com.limp.framework.core.constant.Constant@CODE_TRANS_PRE}LV" , COUNT(1) NUM
        FROM THEM_YCS_JBXX TT
        WHERE YEAR = (SELECT MAX(YEAR) FROM them_ycs_jbxx)
        AND TT.EDUCERTCODE!='73_' and TT.EDUCERTCODE!='73_0'<!--todo:字典表无数据,暂时屏蔽-->
        AND TT.EDUCERTCODE IS NOT NULL
        AND TT.LV IS NOT NULL
        AND TT.ORGNAME IS NOT NULL
        AND TT.ORGNAMEUP IS NOT NULL
        <if test="orgcode != null">
          AND TT.orgcode like #{orgcode}
        </if>
        <if test="rangetype != null">
          AND TT.rangetype = #{rangetype}
        </if>
        GROUP BY TT.EDUCERTCODE, TT.LV
        ORDER BY TT.EDUCERTCODE ASC
    </select>
    <select id="getYcsCateIndex" resultType="java.util.HashMap" parameterType="com.chinasofti.domain.ThemYcsJBXX">
        SELECT
        <if test="typeStr == 1">
        TT.LV AS "${@com.limp.framework.core.constant.Constant@CODE_TRANS_PRE}TYPE" ,
        </if>
        <if test="typeStr == 2">
          TT.EDUCERTCODE AS "${@com.limp.framework.core.constant.Constant@CODE_TRANS_PRE}TYPE",
        </if>
        COUNT(1) NUM
        FROM THEM_YCS_JBXX TT
        WHERE YEAR = #{year}
        AND TT.EDUCERTCODE IS NOT NULL
        AND TT.LV IS NOT NULL
        AND  TT.LV !=  '特殊资格'
        AND TT.ORGNAME IS NOT NULL
        AND TT.ORGNAMEUP IS NOT NULL
        <if test="orgcode != null">
          AND TT.orgcode like #{orgcode}
        </if>
        <if test="rangetype != null">
          AND TT.rangetype = #{rangetype}
        </if>
        GROUP BY
        <if test="typeStr == 1">
          TT.LV
        </if>
        <if test="typeStr == 2">
          TT.EDUCERTCODE
        </if>
    </select>


    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chinasofti.domain.ThemYcsJBXXExample" >
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from THEM_YCS_JBXX
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <delete id="deleteByExample" parameterType="com.chinasofti.domain.ThemYcsJBXXExample" >
    delete from THEM_YCS_JBXX
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chinasofti.domain.ThemYcsJBXX" >
    insert into THEM_YCS_JBXX (ID, NAME, ORGNAME, 
      PROVCODE, LV, EDUCERTCODE, 
      POSITION, CERTTIME, MAJORCODE, 
      SEX, PXNUM, SHIPNUM, 
      DRAWNUM, PRODUCTNUM, YEAR, 
      RANGETYPE)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{orgname,jdbcType=VARCHAR}, 
      #{provcode,jdbcType=VARCHAR}, #{lv,jdbcType=VARCHAR}, #{educertcode,jdbcType=VARCHAR}, 
      #{position,jdbcType=VARCHAR}, #{certtime,jdbcType=VARCHAR}, #{majorcode,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{pxnum,jdbcType=DECIMAL}, #{shipnum,jdbcType=DECIMAL}, 
      #{drawnum,jdbcType=DECIMAL}, #{productnum,jdbcType=DECIMAL}, #{year,jdbcType=VARCHAR}, 
      #{rangetype,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.chinasofti.domain.ThemYcsJBXX" >
    insert into THEM_YCS_JBXX
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="orgname != null" >
        ORGNAME,
      </if>
      <if test="provcode != null" >
        PROVCODE,
      </if>
      <if test="lv != null" >
        LV,
      </if>
      <if test="educertcode != null" >
        EDUCERTCODE,
      </if>
      <if test="position != null" >
        POSITION,
      </if>
      <if test="certtime != null" >
        CERTTIME,
      </if>
      <if test="majorcode != null" >
        MAJORCODE,
      </if>
      <if test="sex != null" >
        SEX,
      </if>
      <if test="pxnum != null" >
        PXNUM,
      </if>
      <if test="shipnum != null" >
        SHIPNUM,
      </if>
      <if test="drawnum != null" >
        DRAWNUM,
      </if>
      <if test="productnum != null" >
        PRODUCTNUM,
      </if>
      <if test="year != null" >
        YEAR,
      </if>
      <if test="rangetype != null" >
        RANGETYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="orgname != null" >
        #{orgname,jdbcType=VARCHAR},
      </if>
      <if test="provcode != null" >
        #{provcode,jdbcType=VARCHAR},
      </if>
      <if test="lv != null" >
        #{lv,jdbcType=VARCHAR},
      </if>
      <if test="educertcode != null" >
        #{educertcode,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="certtime != null" >
        #{certtime,jdbcType=VARCHAR},
      </if>
      <if test="majorcode != null" >
        #{majorcode,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="pxnum != null" >
        #{pxnum,jdbcType=DECIMAL},
      </if>
      <if test="shipnum != null" >
        #{shipnum,jdbcType=DECIMAL},
      </if>
      <if test="drawnum != null" >
        #{drawnum,jdbcType=DECIMAL},
      </if>
      <if test="productnum != null" >
        #{productnum,jdbcType=DECIMAL},
      </if>
      <if test="year != null" >
        #{year,jdbcType=VARCHAR},
      </if>
      <if test="rangetype != null" >
        #{rangetype,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chinasofti.domain.ThemYcsJBXXExample" resultType="java.lang.Integer" >
    select count(*) from THEM_YCS_JBXX
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update THEM_YCS_JBXX
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.orgname != null" >
        ORGNAME = #{record.orgname,jdbcType=VARCHAR},
      </if>
      <if test="record.provcode != null" >
        PROVCODE = #{record.provcode,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null" >
        LV = #{record.lv,jdbcType=VARCHAR},
      </if>
      <if test="record.educertcode != null" >
        EDUCERTCODE = #{record.educertcode,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null" >
        POSITION = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.certtime != null" >
        CERTTIME = #{record.certtime,jdbcType=VARCHAR},
      </if>
      <if test="record.majorcode != null" >
        MAJORCODE = #{record.majorcode,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        SEX = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.pxnum != null" >
        PXNUM = #{record.pxnum,jdbcType=DECIMAL},
      </if>
      <if test="record.shipnum != null" >
        SHIPNUM = #{record.shipnum,jdbcType=DECIMAL},
      </if>
      <if test="record.drawnum != null" >
        DRAWNUM = #{record.drawnum,jdbcType=DECIMAL},
      </if>
      <if test="record.productnum != null" >
        PRODUCTNUM = #{record.productnum,jdbcType=DECIMAL},
      </if>
      <if test="record.year != null" >
        YEAR = #{record.year,jdbcType=VARCHAR},
      </if>
      <if test="record.rangetype != null" >
        RANGETYPE = #{record.rangetype,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update THEM_YCS_JBXX
    set ID = #{record.id,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      ORGNAME = #{record.orgname,jdbcType=VARCHAR},
      PROVCODE = #{record.provcode,jdbcType=VARCHAR},
      LV = #{record.lv,jdbcType=VARCHAR},
      EDUCERTCODE = #{record.educertcode,jdbcType=VARCHAR},
      POSITION = #{record.position,jdbcType=VARCHAR},
      CERTTIME = #{record.certtime,jdbcType=VARCHAR},
      MAJORCODE = #{record.majorcode,jdbcType=VARCHAR},
      SEX = #{record.sex,jdbcType=VARCHAR},
      PXNUM = #{record.pxnum,jdbcType=DECIMAL},
      SHIPNUM = #{record.shipnum,jdbcType=DECIMAL},
      DRAWNUM = #{record.drawnum,jdbcType=DECIMAL},
      PRODUCTNUM = #{record.productnum,jdbcType=DECIMAL},
      YEAR = #{record.year,jdbcType=VARCHAR},
      RANGETYPE = #{record.rangetype,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <sql id="OracleDialectPrefix" >
    <if test="page != null" >
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      <![CDATA[ ) row_  where rownum<= #{page.end}) where rownum_ > #{page.start} ]]>
    </if>
  </sql>
</mapper>