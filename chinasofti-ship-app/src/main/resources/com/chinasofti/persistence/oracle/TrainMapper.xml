<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chinasofti.mapper.oracle.TrainMapper" >
  <resultMap id="BaseResultMap" type="com.chinasofti.domain.Train" >
    <result column="CT_ID" property="id" jdbcType="VARCHAR" />
    <result column="CT_UID" property="uid" jdbcType="VARCHAR" />
    <result column="CT_TRAINNAME" property="trainname" jdbcType="VARCHAR" />
    <result column="CT_TRAININTRO" property="trainintro" jdbcType="VARCHAR" />
    <result column="CT_INITIATE_TIME" property="initiateTime" jdbcType="VARCHAR" />
    <result column="CT_INITIATE_UNITS" property="initiateUnits" jdbcType="VARCHAR" />
    <result column="CT_TRAINPLACE" property="trainplace" jdbcType="VARCHAR" />
    <result column="CT_BEGINTIME" property="begintime" jdbcType="VARCHAR" />
    <result column="CT_ENDTIME" property="endtime" jdbcType="VARCHAR" />
    <result column="CT_LSSUEPLACE" property="lssueplace" jdbcType="VARCHAR" />
    <result column="CT_SURCERTIFICATE" property="surcertificate" jdbcType="VARCHAR" />
    <result column="CT_TRAINTYPE" property="traintype" jdbcType="VARCHAR" />
    <result column="CT_TRAINBATH" property="trainbath" jdbcType="VARCHAR" />
    <result column="CT_IDT" property="idt" jdbcType="OTHER" />
    <result column="CT_UDT" property="udt" jdbcType="OTHER" />
    <result column="CT_STATE" property="state" jdbcType="VARCHAR" />
    <result column="CT_EXAMTYPE" property="examtype" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    CT_ID, CT_UID, CT_TRAINNAME, CT_TRAININTRO, CT_INITIATE_TIME, CT_INITIATE_UNITS,
    CT_TRAINPLACE, CT_BEGINTIME, CT_ENDTIME, CT_LSSUEPLACE, CT_SURCERTIFICATE, CT_TRAINTYPE,
    CT_TRAINBATH, CT_IDT, CT_UDT, CT_STATE, CT_EXAMTYPE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chinasofti.domain.TrainExample" >
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from CIS_TRAININFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>

  <select id="getSurTrainnumByCertnum" resultType="String">
    select count(csr_id) from cis_surtrain_record where csr_surno = #{ycscertnum}
  </select>

  <select id="getSurTrainByCertnum" resultType="SurTrainShow">
    select t1.csr_id as csrId,
    t1.csr_uid as csrUid,
    t1.csr_trainid as csrTrainid,
    t1.csr_surname as csrSurname,
    t1.csr_surno as csrSurno,
    t1.csr_examtscore as examtscore,
    t1.csr_lssuestatus as lssuestatus,
    t2.ct_trainname as trainname,
    t2.ct_initiate_units as initiateUnits,
    t2.ct_begintime as begintime,
    t2.ct_endtime as endtime,
    (select t4.dictdata_name from dic_code t4 where t4.dict_cate='20' and t4.dictdata_value=t2.ct_surcertificate) as surcertificate,
    (select t3.cim_path from cis_img_manager t3 where t3.cim_refid = t2.ct_uid) as imageUrl
    from cis_surtrain_record t1
    inner join cis_traininfo t2 on t1.csr_trainid = t2.ct_uid
    where t1.csr_surno = #{csrSurno}
  </select>

  <delete id="deleteByExample" parameterType="com.chinasofti.domain.TrainExample" >
    delete from CIS_TRAININFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chinasofti.domain.Train" >
    insert into CIS_TRAININFO (CT_ID, CT_UID, CT_TRAINNAME,
    CT_TRAININTRO, CT_INITIATE_TIME, CT_INITIATE_UNITS,
    CT_TRAINPLACE, CT_BEGINTIME, CT_ENDTIME,
    CT_LSSUEPLACE, CT_SURCERTIFICATE, CT_TRAINTYPE,
    CT_TRAINBATH, CT_IDT, CT_UDT, CT_STATE,
    CT_EXAMTYPE)
    values (#{id,jdbcType=VARCHAR}, #{uid,jdbcType=VARCHAR}, #{trainname,jdbcType=VARCHAR},
    #{trainintro,jdbcType=VARCHAR}, #{initiateTime,jdbcType=VARCHAR}, #{initiateUnits,jdbcType=VARCHAR},
    #{trainplace,jdbcType=VARCHAR}, #{begintime,jdbcType=VARCHAR}, #{endtime,jdbcType=VARCHAR},
    #{lssueplace,jdbcType=VARCHAR}, #{surcertificate,jdbcType=VARCHAR}, #{traintype,jdbcType=VARCHAR},
    #{trainbath,jdbcType=VARCHAR}, #{idt,jdbcType=OTHER}, #{udt,jdbcType=OTHER}, #{state,jdbcType=VARCHAR},
    #{examtype,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.chinasofti.domain.Train" >
    insert into CIS_TRAININFO
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        CT_ID,
      </if>
      <if test="uid != null" >
        CT_UID,
      </if>
      <if test="trainname != null" >
        CT_TRAINNAME,
      </if>
      <if test="trainintro != null" >
        CT_TRAININTRO,
      </if>
      <if test="initiateTime != null" >
        CT_INITIATE_TIME,
      </if>
      <if test="initiateUnits != null" >
        CT_INITIATE_UNITS,
      </if>
      <if test="trainplace != null" >
        CT_TRAINPLACE,
      </if>
      <if test="begintime != null" >
        CT_BEGINTIME,
      </if>
      <if test="endtime != null" >
        CT_ENDTIME,
      </if>
      <if test="lssueplace != null" >
        CT_LSSUEPLACE,
      </if>
      <if test="surcertificate != null" >
        CT_SURCERTIFICATE,
      </if>
      <if test="traintype != null" >
        CT_TRAINTYPE,
      </if>
      <if test="trainbath != null" >
        CT_TRAINBATH,
      </if>
      <if test="idt != null" >
        CT_IDT,
      </if>
      <if test="udt != null" >
        CT_UDT,
      </if>
      <if test="state != null" >
        CT_STATE,
      </if>
      <if test="examtype != null" >
        CT_EXAMTYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="trainname != null" >
        #{trainname,jdbcType=VARCHAR},
      </if>
      <if test="trainintro != null" >
        #{trainintro,jdbcType=VARCHAR},
      </if>
      <if test="initiateTime != null" >
        #{initiateTime,jdbcType=VARCHAR},
      </if>
      <if test="initiateUnits != null" >
        #{initiateUnits,jdbcType=VARCHAR},
      </if>
      <if test="trainplace != null" >
        #{trainplace,jdbcType=VARCHAR},
      </if>
      <if test="begintime != null" >
        #{begintime,jdbcType=VARCHAR},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=VARCHAR},
      </if>
      <if test="lssueplace != null" >
        #{lssueplace,jdbcType=VARCHAR},
      </if>
      <if test="surcertificate != null" >
        #{surcertificate,jdbcType=VARCHAR},
      </if>
      <if test="traintype != null" >
        #{traintype,jdbcType=VARCHAR},
      </if>
      <if test="trainbath != null" >
        #{trainbath,jdbcType=VARCHAR},
      </if>
      <if test="idt != null" >
        #{idt,jdbcType=OTHER},
      </if>
      <if test="udt != null" >
        #{udt,jdbcType=OTHER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="examtype != null" >
        #{examtype,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chinasofti.domain.TrainExample" resultType="java.lang.Integer" >
    select count(*) from CIS_TRAININFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update CIS_TRAININFO
    <set >
      <if test="record.id != null" >
        CT_ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null" >
        CT_UID = #{record.uid,jdbcType=VARCHAR},
      </if>
      <if test="record.trainname != null" >
        CT_TRAINNAME = #{record.trainname,jdbcType=VARCHAR},
      </if>
      <if test="record.trainintro != null" >
        CT_TRAININTRO = #{record.trainintro,jdbcType=VARCHAR},
      </if>
      <if test="record.initiateTime != null" >
        CT_INITIATE_TIME = #{record.initiateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.initiateUnits != null" >
        CT_INITIATE_UNITS = #{record.initiateUnits,jdbcType=VARCHAR},
      </if>
      <if test="record.trainplace != null" >
        CT_TRAINPLACE = #{record.trainplace,jdbcType=VARCHAR},
      </if>
      <if test="record.begintime != null" >
        CT_BEGINTIME = #{record.begintime,jdbcType=VARCHAR},
      </if>
      <if test="record.endtime != null" >
        CT_ENDTIME = #{record.endtime,jdbcType=VARCHAR},
      </if>
      <if test="record.lssueplace != null" >
        CT_LSSUEPLACE = #{record.lssueplace,jdbcType=VARCHAR},
      </if>
      <if test="record.surcertificate != null" >
        CT_SURCERTIFICATE = #{record.surcertificate,jdbcType=VARCHAR},
      </if>
      <if test="record.traintype != null" >
        CT_TRAINTYPE = #{record.traintype,jdbcType=VARCHAR},
      </if>
      <if test="record.trainbath != null" >
        CT_TRAINBATH = #{record.trainbath,jdbcType=VARCHAR},
      </if>
      <if test="record.idt != null" >
        CT_IDT = #{record.idt,jdbcType=OTHER},
      </if>
      <if test="record.udt != null" >
        CT_UDT = #{record.udt,jdbcType=OTHER},
      </if>
      <if test="record.state != null" >
        CT_STATE = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.examtype != null" >
        CT_EXAMTYPE = #{record.examtype,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update CIS_TRAININFO
    set CT_ID = #{record.id,jdbcType=VARCHAR},
    CT_UID = #{record.uid,jdbcType=VARCHAR},
    CT_TRAINNAME = #{record.trainname,jdbcType=VARCHAR},
    CT_TRAININTRO = #{record.trainintro,jdbcType=VARCHAR},
    CT_INITIATE_TIME = #{record.initiateTime,jdbcType=VARCHAR},
    CT_INITIATE_UNITS = #{record.initiateUnits,jdbcType=VARCHAR},
    CT_TRAINPLACE = #{record.trainplace,jdbcType=VARCHAR},
    CT_BEGINTIME = #{record.begintime,jdbcType=VARCHAR},
    CT_ENDTIME = #{record.endtime,jdbcType=VARCHAR},
    CT_LSSUEPLACE = #{record.lssueplace,jdbcType=VARCHAR},
    CT_SURCERTIFICATE = #{record.surcertificate,jdbcType=VARCHAR},
    CT_TRAINTYPE = #{record.traintype,jdbcType=VARCHAR},
    CT_TRAINBATH = #{record.trainbath,jdbcType=VARCHAR},
    CT_IDT = #{record.idt,jdbcType=OTHER},
    CT_UDT = #{record.udt,jdbcType=OTHER},
    CT_STATE = #{record.state,jdbcType=VARCHAR},
    CT_EXAMTYPE = #{record.examtype,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <sql id="OracleDialectPrefix" >
    <if test="page != null" >
      select * from ( select row_.*, rownum rownum_ from (
    </if>
  </sql>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      <![CDATA[ ) row_  where rownum<= #{page.end}) where rownum_ > #{page.start} ]]>
    </if>
  </sql>

  <sql id="bucode" >'${@com.chinasofti.common.Const@MINISTRY_CODE}'</sql>
  <select id="getSurtrainRecordCount" parameterType="java.lang.String" resultType="java.lang.Integer" >
    select count(*)  from cis_surtrain_record t
    <if test="procode != null">
      where t.csr_orgcode like #{procode}
    </if>
  </select>
  <select id="getSurtrainRecordCountByYear" parameterType="map" resultType="java.lang.Integer" >
    select count(*)
      from cis_surtrain_record t
     where t.csr_trainid in
           (select distinct (t.ct_uid)
              from cis_traininfo t
             where substr(t.ct_begintime, 0, 4) = #{year})
    <if test="procode == null">
      and t.csr_orgcode = <include refid="bucode" />
    </if>
    <if test="procode != null">
      and t.csr_orgcode like #{procode}
    </if>
  </select>
  <select id="getPERCENT" parameterType="java.lang.String" resultType="java.lang.Integer" >
    select nvl(sum(round(100 * t.pxnum /
                         nvl(decode(t.jhnum, 0, null, t.jhnum),
                             decode(t.pxnum, 0, 1, t.pxnum)),
                         2)) / sum(count(t.pxnum)) over(),
               0) as PERCENT
      from them_px_jbxx t
    <if test="procode != null">
      where t.orgcode like #{procode}
    </if>
  </select>
  <select id="getPercentStatistics" parameterType="map" resultType="map" >
    select trainname, percent
      from (select rs.*, rownum
              from (select t.trainname,
                           round(100 * t.pxnum /
                                 nvl(decode(t.jhnum, 0, null, t.jhnum),
                                     decode(t.pxnum, 0, 1, t.pxnum)),                                 2) as percent
                      from them_px_jbxx t
                      <if test="procode == null">
                        where t.orgcode = <include refid="bucode" />
                      </if>
                      <if test="procode != null">
                        where t.orgcode like #{procode}
                      </if>
                     order by t.jhnum ${orderBy}) rs
             where rownum &lt; 6)
  </select>
  <select id="getPlannumByYear" parameterType="map" resultType="java.lang.Integer" >
    select nvl(sum(nvl(t.jhnum, 0)), 0) as plannum
      from them_px_jbxx t
     where substr(t.traindate, 0, 4) = #{year}
    <if test="procode != null">
      and t.orgcode like #{procode}
    </if>
  </select>
  <select id="getTrainRateStatistics" parameterType="map" resultType="map" >
    <!--select rs.*, rownum
      from (select t.ctr_name as name, t.ctr_typecode as code, t.ctr_id as id
              from cis_train_rate t
              join them_px_jbxx tj on tj.id = t.ctr_uid
              <if test="procode == null">
                and tj.orgcode = <include refid="bucode" />
              </if>
              <if test="procode != null">
                and tj.orgcode like #{procode}
              </if>
              where t.ctr_year like #{year}
              <if test="ids != null">
                and t.ctr_id in
                <foreach collection="ids" item="listItem" open="(" close=")" separator="," >
                  #{listItem}
                </foreach>
              </if>
              order by tj.jhnum ${orderBy}) rs
    <if test="ids == null">
      where rownum &lt; 6
    </if>-->

    select rs.*, rownum
    from (select t.CT_TRAINNAME as name, t.CT_TRAINZT as code, t.CT_UID as id
    from CIS_TRAININFO t
    where t.CT_INITIATE_TIME like #{year}
    <if test="procode != null">
      and t.CT_INITIATE_ORGCODE like #{procode}
    </if>
    <if test="ids != null">
      and t.CT_UID in
      <foreach collection="ids" item="listItem" open="(" close=")" separator="," >
        #{listItem}
      </foreach>
    </if>
    order by t.CT_TRAINPEOPLE ${orderBy}) rs
    <if test="ids == null">
      where rownum &lt; 6
    </if>
  </select>
  <select id="getTrainNames" parameterType="map" resultType="map" >
    select t.ctr_name as name, t.ctr_id as id
      from cis_train_rate t
      join them_px_jbxx tj on tj.id = t.ctr_uid
      <if test="procode == null">
        and tj.orgcode = <include refid="bucode" />
      </if>
      <if test="procode != null">
        and tj.orgcode like #{procode}
      </if>
      where t.ctr_year = #{year}
  </select>
  <select id="getTrainingNumByTrainid" parameterType="java.lang.String" resultType="java.lang.Integer" >
    select count(*)
      from cis_surtrain_record t
     where t.csr_trainid = #{trainid}
  </select>
  <select id="getTrainingNameByTrainid" parameterType="java.lang.String" resultType="java.lang.String" >
    select distinct(t.csr_trainname) as trainname from cis_surtrain_record t where t.csr_trainid = #{trainid}
  </select>
  <select id="getTrainingNamesByYear" parameterType="map" resultType="map" >
    select trainname, trainid
      from (select (select distinct (csr_trainname)
                      from cis_surtrain_record
                     where csr_trainid = t.csr_trainid) as trainname,
                   t.csr_trainid as trainid,
                   (select count(*)
                      from cis_surtrain_record
                     where csr_trainid = t.csr_trainid) as trainidnum
              from cis_surtrain_record t
             where t.csr_trainid in
                   (select distinct (t.ct_uid)
                      from cis_traininfo t
                     where substr(t.ct_begintime, 0, 4) = #{year})
            <if test="procode == null">
              and t.csr_orgcode = <include refid="bucode" />
            </if>
            <if test="procode != null">
              and t.csr_orgcode like #{procode}
            </if>
             group by t.csr_trainid
             order by trainidnum desc)
  </select>
  <select id="getTrainbaseByYear" parameterType="map" resultType="java.lang.String" >
    select distinct (t.ct_trainbase) as trainbase
      from cis_traininfo t
      where t.ct_trainbase is not null
      <if test="year != null">
        and substr(t.ct_begintime, 0, 4) = #{year}
      </if>
      <if test="procode != null">
        and t.CT_HOLD_ORGCODE like #{procode}
      </if>
  </select>
  <select id="getSurtrainRecordCountByTrainbaseAndYear" parameterType="map" resultType="java.lang.Integer" >
    select count(*)
      from cis_surtrain_record t
     where t.csr_trainid in
           (select distinct (t.ct_uid)
              from cis_traininfo t
             where t.ct_trainbase = #{trainbase}
             <if test="year != null">
               and substr(t.ct_begintime, 0, 4) = #{year}
             </if>)
    <if test="procode != null">
      and t.csr_orgcode like #{procode}
    </if>
  </select>
  <select id="getType1NumByTrainbaseAndYear" parameterType="map" resultType="java.lang.Integer" >
    select count(*) from cis_teacherinfor t where t.ct_trainname = #{trainbase} and substr(t.ct_authtime, 0, 4) = #{year} and t.ct_type = '1'
  </select>
  <select id="getType2NumByTrainbaseAndYear" parameterType="map" resultType="java.lang.Integer" >
    select count(*) from cis_teacherinfor t where t.ct_trainname = #{trainbase} and substr(t.ct_authtime, 0, 4) = #{year} and t.ct_type = '2'
  </select>
  <select id="getCTENames" parameterType="map" resultType="map" >
    select distinct (t.cte_uid) as id, t.cte_name as name
      from cis_train_evaluate t
      join them_px_jbxx tj on tj.id = t.cte_uid
      <if test="procode == null">
        and tj.orgcode = <include refid="bucode" />
      </if>
      <if test="procode != null">
        and tj.orgcode like #{procode}
      </if>
     where t.cte_year = #{year}
  </select>
  <select id="getCTEByUID" parameterType="map" resultType="map" >
    select t.cte_score as score, t.cte_typename as typename
      from cis_train_evaluate t
     where t.cte_year = #{year}
       and t.cte_uid = #{id}
  </select>
  <select id="getPersonnumCount" parameterType="java.lang.String" resultType="java.lang.Integer" >
    select nvl(sum(nvl(t.ycsgapnum, 0)), 0) as personnum
      from them_ycs_qkrs t
      <if test="procode != null">
        where t.orgcode like #{procode}
      </if>
  </select>
  <select id="getTrainDemandIdByYear" parameterType="map" resultType="java.lang.String" >
    <if test="procode == null">
      select sid
        from (select sid, rownum
                from (select substr(t.orgcode, 0, 2) as sid,
                             nvl(sum(nvl(t.ycsgapnum, 0)), 0) as personnum
                        from them_ycs_qkrs t
                       where t.year = #{year}
                       group by substr(t.orgcode, 0, 2)
                       order by personnum desc) rs
               where rownum &lt; 11)
    </if>
    <if test="procode != null">
      select sid
        from (select sid, rownum
                from (select substr(t.orgcode, 0, 4) as sid,
                             nvl(sum(nvl(t.ycsgapnum, 0)), 0) as personnum
                        from them_ycs_qkrs t
                       where t.year = #{year}
                         and t.orgcode like #{procode}
                       group by substr(t.orgcode, 0, 4)
                       order by personnum desc) rs
               where rownum &lt; 11)
    </if>
  </select>
  <select id="getTrainDemandByYear" parameterType="map" resultType="map" >
    select decode(t.educertcode, '船体', 0, '机电', 1, 2) as majortype, nvl(sum(nvl(t.ycsgapnum, 0)), 0) as personnum
      from them_ycs_qkrs t
     where t.year = #{year}
       and t.orgcode like #{sid}
     group by t.educertcode
     order by majortype
  </select>
  <select id="getTrainPlanningByYear" parameterType="map" resultType="map" >
    select decode(t.educertcode, '船体', 0, '机电', 1, 2) as majortype, nvl(sum(nvl(t.ycsgapnum, 0)), 0) as personnum
      from them_ycs_qkrs t
     where t.year = #{year}
      <if test="procode == null">
        and t.orgcode = <include refid="bucode" />
      </if>
      <if test="procode != null">
        and t.orgcode like #{procode}
      </if>
     group by t.educertcode
     order by majortype
  </select>
  <select id="getCTETypenames" parameterType="map" resultType="java.lang.String" >
    select distinct (t.cte_typename) as typename
    from cis_train_evaluate t
    join them_px_jbxx tj on tj.id = t.cte_uid
    <if test="procode != null">
      and tj.orgcode like #{procode}
    </if>
    where t.cte_year = #{year}
      and t.cte_typename is not null
  </select>
  <select id="getCTENameByUID" parameterType="java.lang.String" resultType="java.lang.String" >
    select distinct (t.cte_name) as name from cis_train_evaluate t where t.cte_uid = #{id}
  </select>
  <select id="getNameByCode" parameterType="java.lang.String" resultType="java.lang.String" >
    <!-- select trunc(dbms_random.value(1,9)) from dual -->
    select t.name from sys_xzqh t where t.code = #{code}
  </select>
  <select id="getYCSorgcodeByYear" parameterType="map" resultType="java.lang.String" >
    <if test="procode == null">
      select scode
        from (select scode, rownum
                from (select substr(t.orgcode, 0, 2) as scode,
                             nvl(sum(nvl(t.ycsgapnum, 0)), 0) as ycsgapnum
                        from them_ycs_qkrs t
                       where t.year = #{year}
                       group by substr(t.orgcode, 0, 2)
                       order by ycsgapnum desc) rs
               where rownum &lt; 11)
    </if>
    <if test="procode != null">
      select scode
        from (select scode, rownum
                from (select substr(t.orgcode, 0, 4) as scode,
                             nvl(sum(nvl(t.ycsgapnum, 0)), 0) as ycsgapnum
                        from them_ycs_qkrs t
                       where t.year = #{year}
                         and t.orgcode like #{procode}
                       group by substr(t.orgcode, 0, 4)
                       order by ycsgapnum desc) rs
               where rownum &lt; 11)
    </if>
  </select>
  <select id="getYCSgapByYear" parameterType="map" resultType="map" >
    select decode(t.educertcode, '船体', 0, '机电', 1, 2) as majortype,
           nvl(sum(nvl(t.ycsgapnum, 0)), 0) as ycsgapnum
      from them_ycs_qkrs t
     where t.year = #{year}
       and t.orgcode like #{scode}
     group by t.educertcode
     <!-- order by t.educertcode -->
  </select>
</mapper>